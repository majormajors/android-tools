#!/bin/bash

# Define some variables
QUIET=0
SINGLE=0
OUTPUT_DIR=`pwd`
APP_ID=""

print_help() {
  echo "usage: screenshot [-h|--help] [-q|--quiet] [-s|--single] [-o|--output dir] [-a|--app-id app.id]"
  echo
  echo "This script relies on adb being in your path or for the ANDROID_HOME variable to be set."
  echo
  echo "If you specify an app ID, the script will only capture screenshots from that app"
  echo
  echo "Options"
  echo "       -h, --help    Display this help screen"
  echo "       -q, --quiet   Quiet mode (no output)"
  echo "       -s, --single  Capture a single screenshot and then exit"
  echo "       -a, --app-id  Capture screenshots from only the specified app id"
  echo "       -o, --output  Specify the output directory (pwd by default)"
}

check_value() {
  key="$1"
  value="$2"
  if [[ -z "$value" || ${value} =~ ^- ]]; then
    echo "The $key option needs a value" >&2
    echo
    print_help
    exit 1
  fi
}

# Parse arguments
POSITIONAL=()
while [[ $# -gt 0 ]]
do
  key="$1"
  case ${key} in
    --help|-h)
      print_help
      exit
      ;;
    --quiet|-q)
      QUIET=1
      shift
      ;;
    --single|-s)
      SINGLE=1
      shift
      ;;
    --output|-o)
      value="$2"
      check_value ${key} ${value}
      OUTPUT_DIR="$(realpath $2)"
      shift
      shift
      ;;
    --app-id|-a)
      value="$2"
      check_value ${key} ${value}
      APP_ID="$2"
      shift
      shift
      ;;
    *)
      if [[ ${key} =~ ^- ]]; then
        echo "Unrecognized argument: $key" >&2
        echo
        print_help
        exit 1
      fi
      POSITIONAL+=("$1")
      shift
      ;;
  esac
done
set -- "${POSITIONAL[@]}"

# Find adb
ANDROID_HOME=${ANDROID_HOME}
if [[ -d ${ANDROID_HOME} ]]; then
  ADB_PATH="${ANDROID_HOME}/platform-tools/adb"
fi
if [[ -z "$ADB_PATH" ]]; then
  ADB_PATH=`which adb`
fi
if [[ ! -x "${ADB_PATH}" ]]; then
  echo "Couldn't find adb. Please make sure it's in your \$PATH or that your \$ANDROID_HOME is set correctly" &>2
  exit 1
fi

ACTIVITY_COMMAND="${ADB_PATH} shell dumpsys window windows | sed -nr 's/^.+mCurrentFocus=Window\{[0-9a-f]+ .. ([^}]+)\}$/\1/p'"
SCREENSHOT_COMMAND="${ADB_PATH} shell screencap -p"

record_screenshot() {
  declare -a ACTIVITY_INFO

  _ADB_OUTPUT=`${ACTIVITY_COMMAND}`
  if [[ $? -ne 0 ]]; then
    exit 1
  fi

  IFS="/" read -a ACTIVITY_INFO <<< "$_ADB_OUTPUT"

  CURRENT_APP_ID="${ACTIVITY_INFO[0]}"
  CURRENT_ACTIVITY_FQN="${ACTIVITY_INFO[1]}"

  if [[ ! -z "${APP_ID}" ]]; then
    if [[ "${APP_ID}" != "${CURRENT_APP_ID}" ]]; then
      echo "Foreground Activity does not belong to ${APP_ID}" >&2
      return
    fi
  fi

  FILENAME="${CURRENT_ACTIVITY_FQN}_$(date '+%Y-%m-%d-%H%M%S').png"

  ${SCREENSHOT_COMMAND} > ${OUTPUT_DIR}/${FILENAME}
  if [[ $? -eq 0 && "${QUIET}" == "0" ]]; then
    echo "Recorded ${FILENAME}"
  fi
}


if [[ "${SINGLE}" == "1" ]]
then
  record_screenshot
else
  INPUT=""
  while true; do
    echo "Press enter to take screenshot or q to quit:"
    read -sn 1 INPUT
    if [[ "${INPUT}" == "q" ]]; then
      exit
    fi
    if [[ -z "${INPUT}" ]];
    then
      record_screenshot
    else
      echo "Invalid input" >&2
    fi
  done
fi
